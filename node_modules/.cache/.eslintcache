[{"/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Catalog.js":"1","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/App.js":"2","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Header.js":"3","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/FoodBubbleDetail.js":"4","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/FoodBubble.js":"5","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/index.js":"6","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/NavBar.js":"7","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Home.js":"8","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/History.js":"9","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Intake.js":"10","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Profile.js":"11","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Info.js":"12"},{"size":2236,"mtime":1655958685909,"results":"13","hashOfConfig":"14"},{"size":1349,"mtime":1655960945129,"results":"15","hashOfConfig":"14"},{"size":1107,"mtime":1655961363219,"results":"16","hashOfConfig":"14"},{"size":2566,"mtime":1655959106029,"results":"17","hashOfConfig":"14"},{"size":320,"mtime":1655956369979,"results":"18","hashOfConfig":"14"},{"size":257,"mtime":1655869253159,"results":"19","hashOfConfig":"14"},{"size":428,"mtime":1655871893129,"results":"20","hashOfConfig":"14"},{"size":106,"mtime":1655869253159,"results":"21","hashOfConfig":"14"},{"size":215,"mtime":1655959543459,"results":"22","hashOfConfig":"14"},{"size":176,"mtime":1655959564609,"results":"23","hashOfConfig":"14"},{"size":638,"mtime":1655959653149,"results":"24","hashOfConfig":"14"},{"size":151,"mtime":1655870517209,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oab2ke",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Catalog.js",[],[],"/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/App.js",["65"],[],"import React , { useState, useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport NavBar from \"./NavBar.js\";\nimport Home from \"./Home.js\";\nimport Catalog from \"./Catalog.js\";\nimport Profile from \"./Profile.js\";\nimport History from './History.js';\nimport Intake from './Intake.js';\nimport Header from \"./Header.js\";\n\n\n\nfunction App() {\n\n  const [ foodProfile , setFoodProfile] = useState([])\n  const [ foodHistory , setFoodHistory] = useState([])\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/foodHistory\")\n      .then((r) => r.json())\n      .then((data) => {\n        setFoodHistory([...data]);\n      });\n  } , [])\n\n  return (    \n    <div>\n      <NavBar />\n      \n      <Switch>\n          <Route exact path=\"/catalog\" >\n              <Header foodProfile={foodProfile} setFoodProfile={setFoodProfile} />      \n              <Catalog foodProfile={foodProfile} setFoodProfile={setFoodProfile} />\n          </Route>\n\n          <Route exact path=\"/profile\" >\n              <Profile />\n          </Route>\n\n          <Route exact path=\"/profile/history\" >\n            <History />\n          </Route>\n\n          <Route exact path=\"/profile/intake\" >\n            <Intake />\n          </Route>\n\n          <Route exact path=\"/\" >\n              <Home />\n          </Route>\n      </Switch>\n    </div>\n\n  );\n}\n\nexport default App;\n","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Header.js",["66"],[],"/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/FoodBubbleDetail.js",["67"],[],"import React from \"react\";\n\nfunction FoodBubbleDetail({ food , removeFood }) {\n\n    function handleClick() {\n        console.log(food)\n        removeFood(food.fdcId)\n    }\n\n    const nutrientInfo = {\n        Calories: \"\",\n        Protein: \"\",\n        Sugar: \"\", \n        Carbohydrates: \"\",\n        TotalFat: \"\",\n    };\n\n    food.foodNutrients.forEach(nutrient => {\n        switch(nutrient.nutrientName) {\n            case \"Energy\":\n                nutrientInfo[\"Calories\"] = nutrient.value;\n                break;\n            case \"Protein\":\n                nutrientInfo[\"Protein\"] = nutrient.value;\n                break;\n            case \"Sugars, total including NLEA\":\n                nutrientInfo[\"Sugar\"] = nutrient.value;\n                break;\n            case \"Carbohydrate, by difference\":\n                nutrientInfo[\"Carbohydrates\"] = nutrient.value;\n                break;\n            case \"Total lipid (fat)\":\n                nutrientInfo[\"TotalFat\"] = nutrient.value;\n                break;\n        }\n    });\n\n    return (\n        <div className=\"mini-card\" onClick={handleClick}>\n            <h4>{food.description}</h4>\n            <table>\n                <tbody>\n                    { food.servingSize === undefined ? \n                        <tr>\n                            <td>{food.foodMeasures[0].disseminationText}</td> \n                            <td>{food.foodMeasures[0].gramWeight + ' g'}</td> \n                        </tr> :\n                        \n                        <tr>\n                            <td>Serving Size</td>\n                            <td>{food.servingSize +' '+ food.servingSizeUnit}</td> \n                        </tr>\n                    }\n                    <tr>\n                        <td>Calories</td>\n                        <td>{nutrientInfo[\"Calories\"]}</td>\n                    </tr>\n                    <tr>\n                        <td>Protein</td>\n                        <td>{nutrientInfo[\"Protein\"]}</td>\n                    </tr>\n                    <tr>\n                        <td>Sugar</td>\n                        <td>{nutrientInfo[\"Sugar\"]}</td>\n                    </tr>\n                    <tr>\n                        <td>Carbohydrates</td>\n                        <td>{nutrientInfo[\"Carbohydrates\"]}</td>\n                    </tr>\n                    <tr>\n                        <td>Total Fat</td>\n                        <td>{nutrientInfo[\"TotalFat\"]}</td>\n                    </tr>\n                </tbody>\n            </table> \n        </div>\n    )\n}\n\nexport default FoodBubbleDetail;","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/FoodBubble.js",[],[],"/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/index.js",[],[],"/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/NavBar.js",[],[],"/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Home.js",[],[],"/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/History.js",[],[],"/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Intake.js",[],[],"/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Profile.js",["68","69"],[],"import React from \"react\";\nimport Info from \"./Info\";\nimport { Route, Switch, NavLink, useRouteMatch } from 'react-router-dom';\nimport \"../styles/profile.css\"\n\nfunction Profile() {\n\n    const match = useRouteMatch();\n    console.log(match)\n\n    return (\n        <div>\n            <ul className=\"profile-buttons\">\n                <li>\n                <NavLink to={`${match.url}/history`} >View My Food History</NavLink></li>\n                <li>\n                <NavLink to={`${match.url}/intake`} >View my Daily Intake</NavLink>\n                </li>\n            </ul>\n\n            <Info />\n        </div>\n\n    )\n}\n\nexport default Profile","/home/yif/Development/code/phase-2/Nutritional-Intake-Tracker/src/components/Info.js",[],[],{"ruleId":"70","severity":1,"message":"71","line":16,"column":11,"nodeType":"72","messageId":"73","endLine":16,"endColumn":22},{"ruleId":"70","severity":1,"message":"74","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":19,"column":9,"nodeType":"77","messageId":"78","endLine":35,"endColumn":10},{"ruleId":"70","severity":1,"message":"79","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":15},{"ruleId":"70","severity":1,"message":"80","line":3,"column":17,"nodeType":"72","messageId":"73","endLine":3,"endColumn":23},"no-unused-vars","'foodHistory' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Route' is defined but never used.","'Switch' is defined but never used."]